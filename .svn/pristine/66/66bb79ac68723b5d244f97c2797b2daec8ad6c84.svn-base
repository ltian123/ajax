Ajax
	A 				J			A		X	
	Asynchronous	JavaScript	and		XML
	
	异步
	
	是为了改善传统的web应用中
	请求--->等待--->响应这种模式的弊端
	使用的是javaScript,调用浏览器提供的对象(XmlHttpRequest,js对象，ajax引擎)
	向服务器异步的发送请求
	浏览器不会丢失任何数据
	用户在这期间仍然可以对页面进行操作
	当服务器返回响应数据(文本、xml)之后
	javaScript可以操作这个数据
	更新dom
	用户界面可以实现局部的更新,整个页面无刷新
	
	请求--->等待--->响应模式的缺点
		用户体验不友好,服务器返回响应之前,用户不能对页面做任何操作
		服务器将页面的所有数据传输给浏览器,造成了浏览器与服务器之前的大量的冗余数据,对性能有影响
		用户填写的数据在校验失败以后,会丢失,需要重新填写,用户体验不友好
	
	使用
		var xmlHttpRequest;
		if(window.ActiveXObject){
			xmlHttpRequest = new ActiveXObject("Microsoft.XMLHTTP");
			alert("ie下:"+xmlHttpRequest);
		}else{
			xmlHttpRequest = new XMLHttpRequest();
			alert("通用:"+xmlHttpRequest);
		}
	
	XMLHttpRequest
		是整个Ajax技术的核心,提供了异步发送请求的能力
		常用方法:
			open(method,URL,ascyn)
				建立与服务器的连接
				method:表示请求的方式,get/post
				URL:url地址(url-pattern)
				ascyn:是否使用异步的方式发送,true/false
				
			send(content)
				发送请求
				content:请求中的参数
				
			setRequestHeader(header,value)
				设置请求头信息
				
		常用属性:
			onreadystatechange
				事件属性,可以使用回调函数
				
			readyState
				表示XMLHttpRequest当前的状态信息
				0:(未初始化实例)对象以及建立,但是尚未初始化
				1:(初始化)对象已经初始化,尚未调用send方法
				2:(发送数据)send方法已经调用,但是当前的状态以及http头信息未知
				3:(响应数据发送中)已经接收到了部分的数据,但是数据不全
				4:(响应结束)所有的处理已经完成,数据已经返回给浏览器的js中
				
			status
				http状态码
				200:表示成功
				302:重定向状态码
				400:无法找到请求中的资源
				403:没有访问权限
				404:访问的资源不存在
				405:请求方式不对
				500:服务器内部错误
				
			responseText
				获取响应的文本内容
			responseXML
				获取响应的XML文档对象
		
	
	
	
	
	
	
	
	
	